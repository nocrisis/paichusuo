/** layui-v2.3.0-rc1-lmf-1.0.18 MIT License By https://www.layui.com */
 ;layui.define("jquery",function(t){"use strict";var a=layui.$,i=(layui.hint(),layui.device()),e="element",l="layui-this",n="layui-show",s=function(){this.config={}};s.prototype.set=function(t){var i=this;return a.extend(!0,i.config,t),i},s.prototype.on=function(t,a){return layui.onevent.call(this,e,t,a)},s.prototype.tabAdd=function(t,i){var e=".layui-tab-title",l=a(".layui-tab[lay-filter="+t+"]"),n=l.children(e),s=n.children(".layui-tab-bar"),o=l.children(".layui-tab-content"),r='<li lay-id="'+(i.id||"")+'"'+(i.attr?' lay-attr="'+i.attr+'"':"")+">"+(i.title||"unnaming")+"</li>";return s[0]?s.before(r):n.append(r),o.append('<div class="layui-tab-item">'+(i.content||"")+"</div>"),f.hideTabMore(!0),f.tabAuto(),this},s.prototype.tabDelete=function(t,i){var e=".layui-tab-title",l=a(".layui-tab[lay-filter="+t+"]"),n=l.children(e),s=n.find('>li[lay-id="'+i+'"]');return f.tabDelete(null,s),this},s.prototype.tabChange=function(t,i){var e=".layui-tab-title",l=a(".layui-tab[lay-filter="+t+"]"),n=l.children(e),s=n.find('>li[lay-id="'+i+'"]');return f.tabClick.call(s[0],null,null,s),this},s.prototype.tab=function(t){t=t||{},b.on("click",t.headerElem,function(i){var e=a(this).index();f.tabClick.call(this,i,e,null,t)})},s.prototype.progress=function(t,i){var e="layui-progress",l=a("."+e+"[lay-filter="+t+"]"),n=l.find("."+e+"-bar"),s=n.find("."+e+"-text");return n.css("width",i),s.text(i),this};var o=".layui-nav",r="layui-nav-item",c="layui-nav-bar",u="layui-nav-tree",d="layui-nav-child",y="layui-nav-more",h="layui-anim layui-anim-upbit",f={tabClick:function(t,i,s,o){o=o||{};var r=s||a(this),i=i||r.parent().children("li").index(r),c=o.headerElem?r.parent():r.parents(".layui-tab").eq(0),u=o.bodyElem?a(o.bodyElem):c.children(".layui-tab-content").children(".layui-tab-item"),d=r.find("a"),y=c.attr("lay-filter");"javascript:;"!==d.attr("href")&&"_blank"===d.attr("target")||(r.addClass(l).siblings().removeClass(l),u.eq(i).addClass(n).siblings().removeClass(n)),layui.event.call(this,e,"tab("+y+")",{elem:c,index:i})},tabDelete:function(t,i){var n=i||a(this).parent(),s=n.index(),o=n.parents(".layui-tab").eq(0),r=o.children(".layui-tab-content").children(".layui-tab-item"),c=o.attr("lay-filter");n.hasClass(l)&&(n.next()[0]?f.tabClick.call(n.next()[0],null,s+1):n.prev()[0]&&f.tabClick.call(n.prev()[0],null,s-1)),n.remove(),r.eq(s).remove(),setTimeout(function(){f.tabAuto()},50),layui.event.call(this,e,"tabDelete("+c+")",{elem:o,index:s})},tabAuto:function(){var t="layui-tab-more",e="layui-tab-bar",l="layui-tab-close",n=this;a(".layui-tab").each(function(){var s=a(this),o=s.children(".layui-tab-title"),r=(s.children(".layui-tab-content").children(".layui-tab-item"),'lay-stope="tabmore"'),c=a('<span class="layui-unselect layui-tab-bar" '+r+"><i "+r+' class="layui-icon">&#xe61a;</i></span>');if(n===window&&8!=i.ie&&f.hideTabMore(!0),s.attr("lay-allowClose")&&o.find("li").each(function(){var t=a(this);if(!t.find("."+l)[0]){var i=a('<i class="layui-icon layui-unselect '+l+'">&#x1006;</i>');i.on("click",f.tabDelete),t.append(i)}}),"string"!=typeof s.attr("lay-unauto"))if(o.prop("scrollWidth")>o.outerWidth()+1){if(o.find("."+e)[0])return;o.append(c),s.attr("overflow",""),c.on("click",function(a){o[this.title?"removeClass":"addClass"](t),this.title=this.title?"":"收缩"})}else o.find("."+e).remove(),s.removeAttr("overflow")})},hideTabMore:function(t){var i=a(".layui-tab-title");t!==!0&&"tabmore"===a(t.target).attr("lay-stope")||(i.removeClass("layui-tab-more"),i.find(".layui-tab-bar").attr("title",""))},clickThis:function(){var t=a(this),i=t.parents(o),n=i.attr("lay-filter"),s=t.parent(),c=t.siblings("."+d),y="string"==typeof s.attr("lay-unselect");"javascript:;"!==t.attr("href")&&"_blank"===t.attr("target")||y||c[0]||(i.find("."+l).removeClass(l),s.addClass(l)),i.hasClass(u)&&(c.removeClass(h),c[0]&&(s["none"===c.css("display")?"addClass":"removeClass"](r+"ed"),"all"===i.attr("lay-shrink")&&s.siblings().removeClass(r+"ed"))),layui.event.call(this,e,"nav("+n+")",t)},collapse:function(){var t=a(this),i=t.find(".layui-colla-icon"),s=t.siblings(".layui-colla-content"),o=t.parents(".layui-collapse").eq(0),r=o.attr("lay-filter"),c="none"===s.css("display");if("string"==typeof o.attr("lay-accordion")){var u=o.children(".layui-colla-item").children("."+n);u.siblings(".layui-colla-title").children(".layui-colla-icon").html("&#xe602;"),u.removeClass(n)}t[c?"addClass":"removeClass"](l),s[c?"addClass":"removeClass"](n),i.html(c?"&#xe61a;":"&#xe602;"),layui.event.call(this,e,"collapse("+r+")",{title:t,content:s,show:c})}};s.prototype.init=function(t,e){var l=function(){return e?'[lay-filter="'+e+'"]':""}(),s={tab:function(){f.tabAuto.call({})},nav:function(){var t=200,e={},s={},p={},b=function(l,o,r){var c=a(this),f=c.find("."+d);o.hasClass(u)?l.css({top:c.position().top,height:c.children("a").outerHeight(),opacity:1}):(f.addClass(h),l.css({left:c.position().left+parseFloat(c.css("marginLeft")),top:c.position().top+c.height()-l.height()}),e[r]=setTimeout(function(){l.css({width:c.width(),opacity:1})},i.ie&&i.ie<10?0:t),clearTimeout(p[r]),"block"===f.css("display")&&clearTimeout(s[r]),s[r]=setTimeout(function(){f.addClass(n),c.find("."+y).addClass(y+"d")},300))};a(o+l).each(function(i){var l=a(this),o=a('<span class="'+c+'"></span>'),h=l.find("."+r);l.find("."+c)[0]||(l.append(o),h.on("mouseenter",function(){b.call(this,o,l,i)}).on("mouseleave",function(){l.hasClass(u)||(clearTimeout(s[i]),s[i]=setTimeout(function(){l.find("."+d).removeClass(n),l.find("."+y).removeClass(y+"d")},300))}),l.on("mouseleave",function(){clearTimeout(e[i]),p[i]=setTimeout(function(){l.hasClass(u)?o.css({height:0,top:o.position().top+o.height()/2,opacity:0}):o.css({width:0,left:o.position().left+o.width()/2,opacity:0})},t)})),h.find("a").each(function(){var t=a(this),i=(t.parent(),t.siblings("."+d));i[0]&&!t.children("."+y)[0]&&t.append('<span class="'+y+'"></span>'),t.off("click",f.clickThis).on("click",f.clickThis)})})},breadcrumb:function(){var t=".layui-breadcrumb";a(t+l).each(function(){var t=a(this),i="lay-separator",e=t.attr(i)||"/",l=t.find("a");l.next("span["+i+"]")[0]||(l.each(function(t){t!==l.length-1&&a(this).after("<span "+i+">"+e+"</span>")}),t.css("visibility","visible"))})},progress:function(){var t="layui-progress";a("."+t+l).each(function(){var i=a(this),e=i.find(".layui-progress-bar"),l=e.attr("lay-percent");e.css("width",function(){return/^.+\/.+$/.test(l)?100*new Function("return "+l)()+"%":l}()),i.attr("lay-showPercent")&&setTimeout(function(){e.html('<span class="'+t+'-text">'+l+"</span>")},350)})},collapse:function(){var t="layui-collapse";a("."+t+l).each(function(){var t=a(this).find(".layui-colla-item");t.each(function(){var t=a(this),i=t.find(".layui-colla-title"),e=t.find(".layui-colla-content"),l="none"===e.css("display");i.find(".layui-colla-icon").remove(),i.append('<i class="layui-icon layui-colla-icon">'+(l?"&#xe602;":"&#xe61a;")+"</i>"),i.off("click",f.collapse).on("click",f.collapse)})})}};return s[t]?s[t]():layui.each(s,function(t,a){a()})},s.prototype.render=s.prototype.init;var p=new s,b=a(document);p.render();var v=".layui-tab-title li";b.on("click",v,f.tabClick),b.on("click",f.hideTabMore),a(window).on("resize",f.tabAuto),t(e,p)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheS9tb2R1bGVzL2VsZW1lbnQuanMiXSwibmFtZXMiOlsibGF5dWkiLCJkZWZpbmUiLCJleHBvcnRzIiwiJCIsImRldmljZSIsImhpbnQiLCJNT0RfTkFNRSIsIlRISVMiLCJTSE9XIiwiRWxlbWVudCIsInRoaXMiLCJjb25maWciLCJwcm90b3R5cGUiLCJzZXQiLCJvcHRpb25zIiwidGhhdCIsImV4dGVuZCIsIm9uIiwiZXZlbnRzIiwiY2FsbGJhY2siLCJvbmV2ZW50IiwiY2FsbCIsInRhYkFkZCIsImZpbHRlciIsIlRJVExFIiwidGFiRWxlbSIsInRpdEVsZW0iLCJjaGlsZHJlbiIsImJhckVsZW0iLCJjb250RWxlbSIsImxpIiwiaWQiLCJhdHRyIiwidGl0bGUiLCJiZWZvcmUiLCJhcHBlbmQiLCJjb250ZW50IiwiaGlkZVRhYk1vcmUiLCJ0YWJBdXRvIiwidGFiRGVsZXRlIiwibGF5aWQiLCJsaUVsZW0iLCJmaW5kIiwidGFiQ2hhbmdlIiwidGFiQ2xpY2siLCJ0YWIiLCJkb20iLCJoZWFkZXJFbGVtIiwiZSIsImluZGV4IiwicHJvZ3Jlc3MiLCJwZXJjZW50IiwiRUxFTSIsImVsZW0iLCJlbGVtQmFyIiwidGV4dCIsImNzcyIsIk5BVl9FTEVNIiwiTkFWX0lURU0iLCJOQVZfQkFSIiwiTkFWX1RSRUUiLCJOQVZfQ0hJTEQiLCJOQVZfTU9SRSIsIk5BVl9BTklNIiwib3RoaXMiLCJwYXJlbnQiLCJwYXJlbnRzIiwiZXEiLCJpdGVtIiwiYm9keUVsZW0iLCJlbGVtQSIsImFkZENsYXNzIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsImV2ZW50IiwiaGFzQ2xhc3MiLCJuZXh0IiwicHJldiIsInJlbW92ZSIsInNldFRpbWVvdXQiLCJNT1JFIiwiQkFSIiwiQ0xPU0UiLCJlYWNoIiwiU1RPUEUiLCJzcGFuIiwid2luZG93IiwiaWUiLCJjbG9zZSIsInByb3AiLCJvdXRlcldpZHRoIiwicmVtb3ZlQXR0ciIsInRzYlRpdGxlIiwidGFyZ2V0IiwiY2xpY2tUaGlzIiwiY2hpbGQiLCJ1bnNlbGVjdCIsImNvbGxhcHNlIiwiaWNvbiIsImVsZW1Db250IiwiaXNOb25lIiwic2hvdyIsImh0bWwiLCJpbml0IiwidHlwZSIsImVsZW1GaWx0ZXIiLCJpdGVtcyIsIm5hdiIsIlRJTUUiLCJ0aW1lciIsInRpbWVyTW9yZSIsInRpbWVFbmQiLCJmb2xsb3ciLCJiYXIiLCJ0b3AiLCJwb3NpdGlvbiIsImhlaWdodCIsIm91dGVySGVpZ2h0Iiwib3BhY2l0eSIsImxlZnQiLCJwYXJzZUZsb2F0Iiwid2lkdGgiLCJjbGVhclRpbWVvdXQiLCJpdGVtRWxlbSIsInRoaXNBIiwib2ZmIiwiYnJlYWRjcnVtYiIsIkFUVEVfU1BSIiwic2VwYXJhdG9yIiwiYU5vZGUiLCJsZW5ndGgiLCJhZnRlciIsInRlc3QiLCJGdW5jdGlvbiIsImVsZW1JdGVtIiwiZWxlbVRpdGxlIiwicmVuZGVyIiwiZWxlbWVudCIsImRvY3VtZW50Il0sIm1hcHBpbmdzIjoiO0VBUUFBLE1BQU1DLE9BQU8sU0FBVSxTQUFTQyxHQUM5QixZQUVBLElBQUlDLEdBQUlILE1BQU1HLEVBRWJDLEdBRE9KLE1BQU1LLE9BQ0pMLE1BQU1JLFVBRWZFLEVBQVcsVUFBV0MsRUFBTyxhQUFjQyxFQUFPLGFBRWxEQyxFQUFVLFdBQ1RDLEtBQUtDLFVBSVBGLEdBQVFHLFVBQVVDLElBQU0sU0FBU0MsR0FDL0IsR0FBSUMsR0FBT0wsSUFFWCxPQURBUCxHQUFFYSxRQUFPLEVBQU1ELEVBQUtKLE9BQVFHLEdBQ3JCQyxHQUlUTixFQUFRRyxVQUFVSyxHQUFLLFNBQVNDLEVBQVFDLEdBQ3RDLE1BQU9uQixPQUFNb0IsUUFBUUMsS0FBS1gsS0FBTUosRUFBVVksRUFBUUMsSUFJcERWLEVBQVFHLFVBQVVVLE9BQVMsU0FBU0MsRUFBUVQsR0FDMUMsR0FBSVUsR0FBUSxtQkFDWEMsRUFBVXRCLEVBQUUseUJBQTBCb0IsRUFBUSxLQUM5Q0csRUFBVUQsRUFBUUUsU0FBU0gsR0FDM0JJLEVBQVVGLEVBQVFDLFNBQVMsa0JBQzNC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R0FBSTdCLEdBQUcsUUFBU08sRUFBT0gsRUFBS3VCLFVBQzVCRSxFQUFJN0IsR0FBRyxRQUFTSSxFQUFLZ0IsYUFDckJsQyxFQUFFbUYsUUFBUXJFLEdBQUcsU0FBVUksRUFBS2lCLFNBRTVCcEMsRUFBUUksRUFBVW1JIiwiZmlsZSI6ImxheS9tb2R1bGVzL2VsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcblxuIEBOYW1l77yabGF5dWkuZWxlbWVudCDluLjnlKjlhYPntKDmk43kvZxcbiBAQXV0aG9y77ya6LSk5b+DXG4gQExpY2Vuc2XvvJpNSVRcbiAgICBcbiAqL1xuIFxubGF5dWkuZGVmaW5lKCdqcXVlcnknLCBmdW5jdGlvbihleHBvcnRzKXtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG4gIFxuICB2YXIgJCA9IGxheXVpLiRcbiAgLGhpbnQgPSBsYXl1aS5oaW50KClcbiAgLGRldmljZSA9IGxheXVpLmRldmljZSgpXG4gIFxuICAsTU9EX05BTUUgPSAnZWxlbWVudCcsIFRISVMgPSAnbGF5dWktdGhpcycsIFNIT1cgPSAnbGF5dWktc2hvdydcbiAgXG4gICxFbGVtZW50ID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmNvbmZpZyA9IHt9O1xuICB9O1xuICBcbiAgLy/lhajlsYDorr7nva5cbiAgRWxlbWVudC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24ob3B0aW9ucyl7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICQuZXh0ZW5kKHRydWUsIHRoYXQuY29uZmlnLCBvcHRpb25zKTtcbiAgICByZXR1cm4gdGhhdDtcbiAgfTtcbiAgXG4gIC8v6KGo5Y2V5LqL5Lu255uR5ZCsXG4gIEVsZW1lbnQucHJvdG90eXBlLm9uID0gZnVuY3Rpb24oZXZlbnRzLCBjYWxsYmFjayl7XG4gICAgcmV0dXJuIGxheXVpLm9uZXZlbnQuY2FsbCh0aGlzLCBNT0RfTkFNRSwgZXZlbnRzLCBjYWxsYmFjayk7XG4gIH07XG4gIFxuICAvL+WklumDqFRhYuaWsOWinlxuICBFbGVtZW50LnByb3RvdHlwZS50YWJBZGQgPSBmdW5jdGlvbihmaWx0ZXIsIG9wdGlvbnMpe1xuICAgIHZhciBUSVRMRSA9ICcubGF5dWktdGFiLXRpdGxlJ1xuICAgICx0YWJFbGVtID0gJCgnLmxheXVpLXRhYltsYXktZmlsdGVyPScrIGZpbHRlciArJ10nKVxuICAgICx0aXRFbGVtID0gdGFiRWxlbS5jaGlsZHJlbihUSVRMRSlcbiAgICAsYmFyRWxlbSA9IHRpdEVsZW0uY2hpbGRyZW4oJy5sYXl1aS10YWItYmFyJylcbiAgICAsY29udEVsZW0gPSB0YWJFbGVtLmNoaWxkcmVuKCcubGF5dWktdGFiLWNvbnRlbnQnKVxuICAgICxsaSA9ICc8bGkgbGF5LWlkPVwiJysgKG9wdGlvbnMuaWR8fCcnKSArJ1wiJ1xuICAgICsob3B0aW9ucy5hdHRyID8gJyBsYXktYXR0cj1cIicrIG9wdGlvbnMuYXR0ciArJ1wiJyA6ICcnKSArJz4nKyAob3B0aW9ucy50aXRsZXx8J3VubmFtaW5nJykgKyc8L2xpPic7XG4gICAgXG4gICAgYmFyRWxlbVswXSA/IGJhckVsZW0uYmVmb3JlKGxpKSA6IHRpdEVsZW0uYXBwZW5kKGxpKTtcbiAgICBjb250RWxlbS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJsYXl1aS10YWItaXRlbVwiPicrIChvcHRpb25zLmNvbnRlbnR8fCcnKSArJzwvZGl2PicpO1xuICAgIGNhbGwuaGlkZVRhYk1vcmUodHJ1ZSk7XG4gICAgY2FsbC50YWJBdXRvKCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIFxuICAvL+WklumDqFRhYuWIoOmZpFxuICBFbGVtZW50LnByb3RvdHlwZS50YWJEZWxldGUgPSBmdW5jdGlvbihmaWx0ZXIsIGxheWlkKXtcbiAgICB2YXIgVElUTEUgPSAnLmxheXVpLXRhYi10aXRsZSdcbiAgICAsdGFiRWxlbSA9ICQoJy5sYXl1aS10YWJbbGF5LWZpbHRlcj0nKyBmaWx0ZXIgKyddJylcbiAgICAsdGl0RWxlbSA9IHRhYkVsZW0uY2hpbGRyZW4oVElUTEUpXG4gICAgLGxpRWxlbSA9IHRpdEVsZW0uZmluZCgnPmxpW2xheS1pZD1cIicrIGxheWlkICsnXCJdJyk7XG4gICAgY2FsbC50YWJEZWxldGUobnVsbCwgbGlFbGVtKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgXG4gIC8v5aSW6YOoVGFi5YiH5o2iXG4gIEVsZW1lbnQucHJvdG90eXBlLnRhYkNoYW5nZSA9IGZ1bmN0aW9uKGZpbHRlciwgbGF5aWQpe1xuICAgIHZhciBUSVRMRSA9ICcubGF5dWktdGFiLXRpdGxlJ1xuICAgICx0YWJFbGVtID0gJCgnLmxheXVpLXRhYltsYXktZmlsdGVyPScrIGZpbHRlciArJ10nKVxuICAgICx0aXRFbGVtID0gdGFiRWxlbS5jaGlsZHJlbihUSVRMRSlcbiAgICAsbGlFbGVtID0gdGl0RWxlbS5maW5kKCc+bGlbbGF5LWlkPVwiJysgbGF5aWQgKydcIl0nKTtcbiAgICBjYWxsLnRhYkNsaWNrLmNhbGwobGlFbGVtWzBdLCBudWxsLCBudWxsLCBsaUVsZW0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBcbiAgLy/oh6rlrprkuYlUYWLpgInpobnljaFcbiAgRWxlbWVudC5wcm90b3R5cGUudGFiID0gZnVuY3Rpb24ob3B0aW9ucyl7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgZG9tLm9uKCdjbGljaycsIG9wdGlvbnMuaGVhZGVyRWxlbSwgZnVuY3Rpb24oZSl7XG4gICAgICB2YXIgaW5kZXggPSAkKHRoaXMpLmluZGV4KCk7XG4gICAgICBjYWxsLnRhYkNsaWNrLmNhbGwodGhpcywgZSwgaW5kZXgsIG51bGwsIG9wdGlvbnMpO1xuICAgIH0pO1xuICB9O1xuICBcbiAgXG4gIC8v5Yqo5oCB5pS55Y+Y6L+b5bqm5p2hXG4gIEVsZW1lbnQucHJvdG90eXBlLnByb2dyZXNzID0gZnVuY3Rpb24oZmlsdGVyLCBwZXJjZW50KXtcbiAgICB2YXIgRUxFTSA9ICdsYXl1aS1wcm9ncmVzcydcbiAgICAsZWxlbSA9ICQoJy4nKyBFTEVNICsnW2xheS1maWx0ZXI9JysgZmlsdGVyICsnXScpXG4gICAgLGVsZW1CYXIgPSBlbGVtLmZpbmQoJy4nKyBFTEVNICsnLWJhcicpXG4gICAgLHRleHQgPSBlbGVtQmFyLmZpbmQoJy4nKyBFTEVNICsnLXRleHQnKTtcbiAgICBlbGVtQmFyLmNzcygnd2lkdGgnLCBwZXJjZW50KTtcbiAgICB0ZXh0LnRleHQocGVyY2VudCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIFxuICB2YXIgTkFWX0VMRU0gPSAnLmxheXVpLW5hdicsIE5BVl9JVEVNID0gJ2xheXVpLW5hdi1pdGVtJywgTkFWX0JBUiA9ICdsYXl1aS1uYXYtYmFyJ1xuICAsTkFWX1RSRUUgPSAnbGF5dWktbmF2LXRyZWUnLCBOQVZfQ0hJTEQgPSAnbGF5dWktbmF2LWNoaWxkJywgTkFWX01PUkUgPSAnbGF5dWktbmF2LW1vcmUnXG4gICxOQVZfQU5JTSA9ICdsYXl1aS1hbmltIGxheXVpLWFuaW0tdXBiaXQnXG4gIFxuICAvL+WfuuehgOS6i+S7tuS9k1xuICAsY2FsbCA9IHtcbiAgICAvL1RhYueCueWHu1xuICAgIHRhYkNsaWNrOiBmdW5jdGlvbihlLCBpbmRleCwgbGlFbGVtLCBvcHRpb25zKXtcbiAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgdmFyIG90aGlzID0gbGlFbGVtIHx8ICQodGhpcylcbiAgICAgICxpbmRleCA9IGluZGV4IHx8IG90aGlzLnBhcmVudCgpLmNoaWxkcmVuKCdsaScpLmluZGV4KG90aGlzKVxuICAgICAgLHBhcmVudHMgPSBvcHRpb25zLmhlYWRlckVsZW0gPyBvdGhpcy5wYXJlbnQoKSA6IG90aGlzLnBhcmVudHMoJy5sYXl1aS10YWInKS5lcSgwKVxuICAgICAgLGl0ZW0gPSBvcHRpb25zLmJvZHlFbGVtID8gJChvcHRpb25zLmJvZHlFbGVtKSA6IHBhcmVudHMuY2hpbGRyZW4oJy5sYXl1aS10YWItY29udGVudCcpLmNoaWxkcmVuKCcubGF5dWktdGFiLWl0ZW0nKVxuICAgICAgLGVsZW1BID0gb3RoaXMuZmluZCgnYScpXG4gICAgICAsZmlsdGVyID0gcGFyZW50cy5hdHRyKCdsYXktZmlsdGVyJyk7XG4gICAgICBcbiAgICAgIGlmKCEoZWxlbUEuYXR0cignaHJlZicpICE9PSAnamF2YXNjcmlwdDo7JyAmJiBlbGVtQS5hdHRyKCd0YXJnZXQnKSA9PT0gJ19ibGFuaycpKXtcbiAgICAgICAgb3RoaXMuYWRkQ2xhc3MoVEhJUykuc2libGluZ3MoKS5yZW1vdmVDbGFzcyhUSElTKTtcbiAgICAgICAgaXRlbS5lcShpbmRleCkuYWRkQ2xhc3MoU0hPVykuc2libGluZ3MoKS5yZW1vdmVDbGFzcyhTSE9XKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgbGF5dWkuZXZlbnQuY2FsbCh0aGlzLCBNT0RfTkFNRSwgJ3RhYignKyBmaWx0ZXIgKycpJywge1xuICAgICAgICBlbGVtOiBwYXJlbnRzXG4gICAgICAgICxpbmRleDogaW5kZXhcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvL1RhYuWIoOmZpFxuICAgICx0YWJEZWxldGU6IGZ1bmN0aW9uKGUsIG90aGlzKXtcbiAgICAgIHZhciBsaSA9IG90aGlzIHx8ICQodGhpcykucGFyZW50KCksIGluZGV4ID0gbGkuaW5kZXgoKVxuICAgICAgLHBhcmVudHMgPSBsaS5wYXJlbnRzKCcubGF5dWktdGFiJykuZXEoMClcbiAgICAgICxpdGVtID0gcGFyZW50cy5jaGlsZHJlbignLmxheXVpLXRhYi1jb250ZW50JykuY2hpbGRyZW4oJy5sYXl1aS10YWItaXRlbScpXG4gICAgICAsZmlsdGVyID0gcGFyZW50cy5hdHRyKCdsYXktZmlsdGVyJyk7XG4gICAgICBcbiAgICAgIGlmKGxpLmhhc0NsYXNzKFRISVMpKXtcbiAgICAgICAgaWYobGkubmV4dCgpWzBdKXtcbiAgICAgICAgICBjYWxsLnRhYkNsaWNrLmNhbGwobGkubmV4dCgpWzBdLCBudWxsLCBpbmRleCArIDEpO1xuICAgICAgICB9IGVsc2UgaWYobGkucHJldigpWzBdKXtcbiAgICAgICAgICBjYWxsLnRhYkNsaWNrLmNhbGwobGkucHJldigpWzBdLCBudWxsLCBpbmRleCAtIDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGxpLnJlbW92ZSgpO1xuICAgICAgaXRlbS5lcShpbmRleCkucmVtb3ZlKCk7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgIGNhbGwudGFiQXV0bygpO1xuICAgICAgfSwgNTApO1xuICAgICAgXG4gICAgICBsYXl1aS5ldmVudC5jYWxsKHRoaXMsIE1PRF9OQU1FLCAndGFiRGVsZXRlKCcrIGZpbHRlciArJyknLCB7XG4gICAgICAgIGVsZW06IHBhcmVudHNcbiAgICAgICAgLGluZGV4OiBpbmRleFxuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vVGFi6Ieq6YCC5bqUXG4gICAgLHRhYkF1dG86IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgU0NST0xMID0gJ2xheXVpLXRhYi1zY3JvbGwnLCBNT1JFID0gJ2xheXVpLXRhYi1tb3JlJywgQkFSID0gJ2xheXVpLXRhYi1iYXInXG4gICAgICAsQ0xPU0UgPSAnbGF5dWktdGFiLWNsb3NlJywgdGhhdCA9IHRoaXM7XG4gICAgICBcbiAgICAgICQoJy5sYXl1aS10YWInKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgIHZhciBvdGhpcyA9ICQodGhpcylcbiAgICAgICAgLHRpdGxlID0gb3RoaXMuY2hpbGRyZW4oJy5sYXl1aS10YWItdGl0bGUnKVxuICAgICAgICAsaXRlbSA9IG90aGlzLmNoaWxkcmVuKCcubGF5dWktdGFiLWNvbnRlbnQnKS5jaGlsZHJlbignLmxheXVpLXRhYi1pdGVtJylcbiAgICAgICAgLFNUT1BFID0gJ2xheS1zdG9wZT1cInRhYm1vcmVcIidcbiAgICAgICAgLHNwYW4gPSAkKCc8c3BhbiBjbGFzcz1cImxheXVpLXVuc2VsZWN0IGxheXVpLXRhYi1iYXJcIiAnKyBTVE9QRSArJz48aSAnKyBTVE9QRSArJyBjbGFzcz1cImxheXVpLWljb25cIj4mI3hlNjFhOzwvaT48L3NwYW4+Jyk7XG5cbiAgICAgICAgaWYodGhhdCA9PT0gd2luZG93ICYmIGRldmljZS5pZSAhPSA4KXtcbiAgICAgICAgICBjYWxsLmhpZGVUYWJNb3JlKHRydWUpXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8v5YWB6K645YWz6ZetXG4gICAgICAgIGlmKG90aGlzLmF0dHIoJ2xheS1hbGxvd0Nsb3NlJykpe1xuICAgICAgICAgIHRpdGxlLmZpbmQoJ2xpJykuZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIGxpID0gJCh0aGlzKTtcbiAgICAgICAgICAgIGlmKCFsaS5maW5kKCcuJytDTE9TRSlbMF0pe1xuICAgICAgICAgICAgICB2YXIgY2xvc2UgPSAkKCc8aSBjbGFzcz1cImxheXVpLWljb24gbGF5dWktdW5zZWxlY3QgJysgQ0xPU0UgKydcIj4mI3gxMDA2OzwvaT4nKTtcbiAgICAgICAgICAgICAgY2xvc2Uub24oJ2NsaWNrJywgY2FsbC50YWJEZWxldGUpO1xuICAgICAgICAgICAgICBsaS5hcHBlbmQoY2xvc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZih0eXBlb2Ygb3RoaXMuYXR0cignbGF5LXVuYXV0bycpID09PSAnc3RyaW5nJykgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgLy/lk43lupTlvI9cbiAgICAgICAgaWYodGl0bGUucHJvcCgnc2Nyb2xsV2lkdGgnKSA+IHRpdGxlLm91dGVyV2lkdGgoKSsxKXtcbiAgICAgICAgICBpZih0aXRsZS5maW5kKCcuJytCQVIpWzBdKSByZXR1cm47XG4gICAgICAgICAgdGl0bGUuYXBwZW5kKHNwYW4pO1xuICAgICAgICAgIG90aGlzLmF0dHIoJ292ZXJmbG93JywgJycpO1xuICAgICAgICAgIHNwYW4ub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICB0aXRsZVt0aGlzLnRpdGxlID8gJ3JlbW92ZUNsYXNzJyA6ICdhZGRDbGFzcyddKE1PUkUpO1xuICAgICAgICAgICAgdGhpcy50aXRsZSA9IHRoaXMudGl0bGUgPyAnJyA6ICfmlLbnvKknO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpdGxlLmZpbmQoJy4nK0JBUikucmVtb3ZlKCk7XG4gICAgICAgICAgb3RoaXMucmVtb3ZlQXR0cignb3ZlcmZsb3cnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIC8v6ZqQ6JeP5pu05aSaVGFiXG4gICAgLGhpZGVUYWJNb3JlOiBmdW5jdGlvbihlKXtcbiAgICAgIHZhciB0c2JUaXRsZSA9ICQoJy5sYXl1aS10YWItdGl0bGUnKTtcbiAgICAgIGlmKGUgPT09IHRydWUgfHwgJChlLnRhcmdldCkuYXR0cignbGF5LXN0b3BlJykgIT09ICd0YWJtb3JlJyl7XG4gICAgICAgIHRzYlRpdGxlLnJlbW92ZUNsYXNzKCdsYXl1aS10YWItbW9yZScpO1xuICAgICAgICB0c2JUaXRsZS5maW5kKCcubGF5dWktdGFiLWJhcicpLmF0dHIoJ3RpdGxlJywnJyk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8v54K55Ye75LiA57qn6I+c5Y2VXG4gICAgLypcbiAgICAsY2xpY2tUaGlzOiBmdW5jdGlvbigpe1xuICAgICAgdmFyIG90aGlzID0gJCh0aGlzKSwgcGFyZW50cyA9IG90aGlzLnBhcmVudHMoTkFWX0VMRU0pXG4gICAgICAsZmlsdGVyID0gcGFyZW50cy5hdHRyKCdsYXktZmlsdGVyJylcbiAgICAgICxlbGVtQSA9IG90aGlzLmZpbmQoJ2EnKVxuICAgICAgLHVuc2VsZWN0ID0gdHlwZW9mIG90aGlzLmF0dHIoJ2xheS11bnNlbGVjdCcpID09PSAnc3RyaW5nJztcblxuICAgICAgaWYob3RoaXMuZmluZCgnLicrTkFWX0NISUxEKVswXSkgcmV0dXJuO1xuICAgICAgXG4gICAgICBpZighKGVsZW1BLmF0dHIoJ2hyZWYnKSAhPT0gJ2phdmFzY3JpcHQ6OycgJiYgZWxlbUEuYXR0cigndGFyZ2V0JykgPT09ICdfYmxhbmsnKSAmJiAhdW5zZWxlY3Qpe1xuICAgICAgICBwYXJlbnRzLmZpbmQoJy4nK1RISVMpLnJlbW92ZUNsYXNzKFRISVMpO1xuICAgICAgICBvdGhpcy5hZGRDbGFzcyhUSElTKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgbGF5dWkuZXZlbnQuY2FsbCh0aGlzLCBNT0RfTkFNRSwgJ25hdignKyBmaWx0ZXIgKycpJywgb3RoaXMpO1xuICAgIH1cbiAgICApXG4gICAgKi9cbiAgICBcbiAgICAvL+eCueWHu+iPnOWNlSAtIGHmoIfnrb7op6blj5FcbiAgICAsY2xpY2tUaGlzOiBmdW5jdGlvbigpe1xuICAgICAgdmFyIG90aGlzID0gJCh0aGlzKVxuICAgICAgLHBhcmVudHMgPSBvdGhpcy5wYXJlbnRzKE5BVl9FTEVNKVxuICAgICAgLGZpbHRlciA9IHBhcmVudHMuYXR0cignbGF5LWZpbHRlcicpXG4gICAgICAscGFyZW50ID0gb3RoaXMucGFyZW50KCkgXG4gICAgICAsY2hpbGQgPSBvdGhpcy5zaWJsaW5ncygnLicrTkFWX0NISUxEKVxuICAgICAgLHVuc2VsZWN0ID0gdHlwZW9mIHBhcmVudC5hdHRyKCdsYXktdW5zZWxlY3QnKSA9PT0gJ3N0cmluZyc7XG4gICAgICBcbiAgICAgIGlmKCEob3RoaXMuYXR0cignaHJlZicpICE9PSAnamF2YXNjcmlwdDo7JyAmJiBvdGhpcy5hdHRyKCd0YXJnZXQnKSA9PT0gJ19ibGFuaycpICYmICF1bnNlbGVjdCl7XG4gICAgICAgIGlmKCFjaGlsZFswXSl7XG4gICAgICAgICAgcGFyZW50cy5maW5kKCcuJytUSElTKS5yZW1vdmVDbGFzcyhUSElTKTtcbiAgICAgICAgICBwYXJlbnQuYWRkQ2xhc3MoVEhJUyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy/lpoLmnpzmmK/lnoLnm7Toj5zljZVcbiAgICAgIGlmKHBhcmVudHMuaGFzQ2xhc3MoTkFWX1RSRUUpKXtcbiAgICAgICAgY2hpbGQucmVtb3ZlQ2xhc3MoTkFWX0FOSU0pO1xuICAgICAgICBcbiAgICAgICAgLy/lpoLmnpzmnInlrZDoj5zljZXvvIzliJnlsZXlvIBcbiAgICAgICAgaWYoY2hpbGRbMF0pe1xuICAgICAgICAgIHBhcmVudFtjaGlsZC5jc3MoJ2Rpc3BsYXknKSA9PT0gJ25vbmUnID8gJ2FkZENsYXNzJzogJ3JlbW92ZUNsYXNzJ10oTkFWX0lURU0rJ2VkJyk7XG4gICAgICAgICAgaWYocGFyZW50cy5hdHRyKCdsYXktc2hyaW5rJykgPT09ICdhbGwnKXtcbiAgICAgICAgICAgIHBhcmVudC5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKE5BVl9JVEVNICsgJ2VkJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGxheXVpLmV2ZW50LmNhbGwodGhpcywgTU9EX05BTUUsICduYXYoJysgZmlsdGVyICsnKScsIG90aGlzKTtcbiAgICB9XG4gICAgXG4gICAgLy/ngrnlh7vlrZDoj5zljZXpgInkuK1cbiAgICAvKlxuICAgICxjbGlja0NoaWxkOiBmdW5jdGlvbigpe1xuICAgICAgdmFyIG90aGlzID0gJCh0aGlzKSwgcGFyZW50cyA9IG90aGlzLnBhcmVudHMoTkFWX0VMRU0pXG4gICAgICAsZmlsdGVyID0gcGFyZW50cy5hdHRyKCdsYXktZmlsdGVyJyk7XG4gICAgICBwYXJlbnRzLmZpbmQoJy4nK1RISVMpLnJlbW92ZUNsYXNzKFRISVMpO1xuICAgICAgb3RoaXMuYWRkQ2xhc3MoVEhJUyk7XG4gICAgICBsYXl1aS5ldmVudC5jYWxsKHRoaXMsIE1PRF9OQU1FLCAnbmF2KCcrIGZpbHRlciArJyknLCBvdGhpcyk7XG4gICAgfVxuICAgICovXG4gICAgXG4gICAgLy/mipjlj6DpnaLmnb9cbiAgICAsY29sbGFwc2U6IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgb3RoaXMgPSAkKHRoaXMpLCBpY29uID0gb3RoaXMuZmluZCgnLmxheXVpLWNvbGxhLWljb24nKVxuICAgICAgLGVsZW1Db250ID0gb3RoaXMuc2libGluZ3MoJy5sYXl1aS1jb2xsYS1jb250ZW50JylcbiAgICAgICxwYXJlbnRzID0gb3RoaXMucGFyZW50cygnLmxheXVpLWNvbGxhcHNlJykuZXEoMClcbiAgICAgICxmaWx0ZXIgPSBwYXJlbnRzLmF0dHIoJ2xheS1maWx0ZXInKVxuICAgICAgLGlzTm9uZSA9IGVsZW1Db250LmNzcygnZGlzcGxheScpID09PSAnbm9uZSc7XG4gICAgICBcbiAgICAgIC8v5piv5ZCm5omL6aOO55C0XG4gICAgICBpZih0eXBlb2YgcGFyZW50cy5hdHRyKCdsYXktYWNjb3JkaW9uJykgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhciBzaG93ID0gcGFyZW50cy5jaGlsZHJlbignLmxheXVpLWNvbGxhLWl0ZW0nKS5jaGlsZHJlbignLicgKyBTSE9XKTtcbiAgICAgICAgc2hvdy5zaWJsaW5ncygnLmxheXVpLWNvbGxhLXRpdGxlJykuY2hpbGRyZW4oJy5sYXl1aS1jb2xsYS1pY29uJykuaHRtbCgnJiN4ZTYwMjsnKTtcbiAgICAgICAgc2hvdy5yZW1vdmVDbGFzcyhTSE9XKTtcbiAgICAgIH1cbiAgICAgIG90aGlzW2lzTm9uZSA/ICdhZGRDbGFzcycgOiAncmVtb3ZlQ2xhc3MnXShUSElTKTtcbiAgICAgIGVsZW1Db250W2lzTm9uZSA/ICdhZGRDbGFzcycgOiAncmVtb3ZlQ2xhc3MnXShTSE9XKTtcbiAgICAgIGljb24uaHRtbChpc05vbmUgPyAnJiN4ZTYxYTsnIDogJyYjeGU2MDI7Jyk7XG4gICAgICBcbiAgICAgIGxheXVpLmV2ZW50LmNhbGwodGhpcywgTU9EX05BTUUsICdjb2xsYXBzZSgnKyBmaWx0ZXIgKycpJywge1xuICAgICAgICB0aXRsZTogb3RoaXNcbiAgICAgICAgLGNvbnRlbnQ6IGVsZW1Db250XG4gICAgICAgICxzaG93OiBpc05vbmVcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgXG4gIC8v5Yid5aeL5YyW5YWD57Sg5pON5L2cXG4gIEVsZW1lbnQucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbih0eXBlLCBmaWx0ZXIpe1xuICAgIHZhciB0aGF0ID0gdGhpcywgZWxlbUZpbHRlciA9IGZ1bmN0aW9uKCl7XG4gICAgICByZXR1cm4gZmlsdGVyID8gKCdbbGF5LWZpbHRlcj1cIicgKyBmaWx0ZXIgKydcIl0nKSA6ICcnO1xuICAgIH0oKSwgaXRlbXMgPSB7XG4gICAgICBcbiAgICAgIC8vVGFi6YCJ6aG55Y2hXG4gICAgICB0YWI6IGZ1bmN0aW9uKCl7XG4gICAgICAgIGNhbGwudGFiQXV0by5jYWxsKHt9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy/lr7zoiKroj5zljZVcbiAgICAgICxuYXY6IGZ1bmN0aW9uKCl7XG4gICAgICAgIHZhciBUSU1FID0gMjAwLCB0aW1lciA9IHt9LCB0aW1lck1vcmUgPSB7fSwgdGltZUVuZCA9IHt9LCBmb2xsb3cgPSBmdW5jdGlvbihiYXIsIG5hdiwgaW5kZXgpe1xuICAgICAgICAgIHZhciBvdGhpcyA9ICQodGhpcyksIGNoaWxkID0gb3RoaXMuZmluZCgnLicrTkFWX0NISUxEKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZihuYXYuaGFzQ2xhc3MoTkFWX1RSRUUpKXtcbiAgICAgICAgICAgIGJhci5jc3Moe1xuICAgICAgICAgICAgICB0b3A6IG90aGlzLnBvc2l0aW9uKCkudG9wXG4gICAgICAgICAgICAgICxoZWlnaHQ6IG90aGlzLmNoaWxkcmVuKCdhJykub3V0ZXJIZWlnaHQoKVxuICAgICAgICAgICAgICAsb3BhY2l0eTogMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNoaWxkLmFkZENsYXNzKE5BVl9BTklNKTtcbiAgICAgICAgICAgIGJhci5jc3Moe1xuICAgICAgICAgICAgICBsZWZ0OiBvdGhpcy5wb3NpdGlvbigpLmxlZnQgKyBwYXJzZUZsb2F0KG90aGlzLmNzcygnbWFyZ2luTGVmdCcpKVxuICAgICAgICAgICAgICAsdG9wOiBvdGhpcy5wb3NpdGlvbigpLnRvcCArIG90aGlzLmhlaWdodCgpIC0gYmFyLmhlaWdodCgpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGltZXJbaW5kZXhdID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICBiYXIuY3NzKHtcbiAgICAgICAgICAgICAgICB3aWR0aDogb3RoaXMud2lkdGgoKVxuICAgICAgICAgICAgICAgICxvcGFjaXR5OiAxXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgZGV2aWNlLmllICYmIGRldmljZS5pZSA8IDEwID8gMCA6IFRJTUUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZUVuZFtpbmRleF0pO1xuICAgICAgICAgICAgaWYoY2hpbGQuY3NzKCdkaXNwbGF5JykgPT09ICdibG9jaycpe1xuICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJNb3JlW2luZGV4XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aW1lck1vcmVbaW5kZXhdID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICBjaGlsZC5hZGRDbGFzcyhTSE9XKVxuICAgICAgICAgICAgICBvdGhpcy5maW5kKCcuJytOQVZfTU9SRSkuYWRkQ2xhc3MoTkFWX01PUkUrJ2QnKTtcbiAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAkKE5BVl9FTEVNICsgZWxlbUZpbHRlcikuZWFjaChmdW5jdGlvbihpbmRleCl7XG4gICAgICAgICAgdmFyIG90aGlzID0gJCh0aGlzKVxuICAgICAgICAgICxiYXIgPSAkKCc8c3BhbiBjbGFzcz1cIicrIE5BVl9CQVIgKydcIj48L3NwYW4+JylcbiAgICAgICAgICAsaXRlbUVsZW0gPSBvdGhpcy5maW5kKCcuJytOQVZfSVRFTSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy9Ib3Zlcua7keWKqOaViOaenFxuICAgICAgICAgIGlmKCFvdGhpcy5maW5kKCcuJytOQVZfQkFSKVswXSl7XG4gICAgICAgICAgICBvdGhpcy5hcHBlbmQoYmFyKTtcbiAgICAgICAgICAgIGl0ZW1FbGVtLm9uKCdtb3VzZWVudGVyJywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgZm9sbG93LmNhbGwodGhpcywgYmFyLCBvdGhpcywgaW5kZXgpO1xuICAgICAgICAgICAgfSkub24oJ21vdXNlbGVhdmUnLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICBpZighb3RoaXMuaGFzQ2xhc3MoTkFWX1RSRUUpKXtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJNb3JlW2luZGV4XSk7XG4gICAgICAgICAgICAgICAgdGltZXJNb3JlW2luZGV4XSA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgIG90aGlzLmZpbmQoJy4nK05BVl9DSElMRCkucmVtb3ZlQ2xhc3MoU0hPVyk7XG4gICAgICAgICAgICAgICAgICBvdGhpcy5maW5kKCcuJytOQVZfTU9SRSkucmVtb3ZlQ2xhc3MoTkFWX01PUkUrJ2QnKTtcbiAgICAgICAgICAgICAgICB9LCAzMDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG90aGlzLm9uKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyW2luZGV4XSlcbiAgICAgICAgICAgICAgdGltZUVuZFtpbmRleF0gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgaWYob3RoaXMuaGFzQ2xhc3MoTkFWX1RSRUUpKXtcbiAgICAgICAgICAgICAgICAgIGJhci5jc3Moe1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDBcbiAgICAgICAgICAgICAgICAgICAgLHRvcDogYmFyLnBvc2l0aW9uKCkudG9wICsgYmFyLmhlaWdodCgpLzJcbiAgICAgICAgICAgICAgICAgICAgLG9wYWNpdHk6IDBcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBiYXIuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDBcbiAgICAgICAgICAgICAgICAgICAgLGxlZnQ6IGJhci5wb3NpdGlvbigpLmxlZnQgKyBiYXIud2lkdGgoKS8yXG4gICAgICAgICAgICAgICAgICAgICxvcGFjaXR5OiAwXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sIFRJTUUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8v5bGV5byA5a2Q6I+c5Y2VXG4gICAgICAgICAgaXRlbUVsZW0uZmluZCgnYScpLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciB0aGlzQSA9ICQodGhpcylcbiAgICAgICAgICAgICxwYXJlbnQgPSB0aGlzQS5wYXJlbnQoKVxuICAgICAgICAgICAgLGNoaWxkID0gdGhpc0Euc2libGluZ3MoJy4nK05BVl9DSElMRCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8v6L6T5Ye65bCP566t5aS0XG4gICAgICAgICAgICBpZihjaGlsZFswXSAmJiAhdGhpc0EuY2hpbGRyZW4oJy4nK05BVl9NT1JFKVswXSl7XG4gICAgICAgICAgICAgIHRoaXNBLmFwcGVuZCgnPHNwYW4gY2xhc3M9XCInKyBOQVZfTU9SRSArJ1wiPjwvc3Bhbj4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpc0Eub2ZmKCdjbGljaycsIGNhbGwuY2xpY2tUaGlzKS5vbignY2xpY2snLCBjYWxsLmNsaWNrVGhpcyk7IC8v54K55Ye76I+c5Y2VXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvL+mdouWMheWxkVxuICAgICAgLGJyZWFkY3J1bWI6IGZ1bmN0aW9uKCl7XG4gICAgICAgIHZhciBFTEVNID0gJy5sYXl1aS1icmVhZGNydW1iJztcbiAgICAgICAgXG4gICAgICAgICQoRUxFTSArIGVsZW1GaWx0ZXIpLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICB2YXIgb3RoaXMgPSAkKHRoaXMpXG4gICAgICAgICAgLEFUVEVfU1BSID0gJ2xheS1zZXBhcmF0b3InXG4gICAgICAgICAgLHNlcGFyYXRvciA9IG90aGlzLmF0dHIoQVRURV9TUFIpIHx8ICcvJ1xuICAgICAgICAgICxhTm9kZSA9IG90aGlzLmZpbmQoJ2EnKTtcbiAgICAgICAgICBpZihhTm9kZS5uZXh0KCdzcGFuWycrIEFUVEVfU1BSICsnXScpWzBdKSByZXR1cm47XG4gICAgICAgICAgYU5vZGUuZWFjaChmdW5jdGlvbihpbmRleCl7XG4gICAgICAgICAgICBpZihpbmRleCA9PT0gYU5vZGUubGVuZ3RoIC0gMSkgcmV0dXJuO1xuICAgICAgICAgICAgJCh0aGlzKS5hZnRlcignPHNwYW4gJysgQVRURV9TUFIgKyc+Jysgc2VwYXJhdG9yICsnPC9zcGFuPicpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIG90aGlzLmNzcygndmlzaWJpbGl0eScsICd2aXNpYmxlJyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvL+i/m+W6puadoVxuICAgICAgLHByb2dyZXNzOiBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgRUxFTSA9ICdsYXl1aS1wcm9ncmVzcyc7XG4gICAgICAgICQoJy4nICsgRUxFTSArIGVsZW1GaWx0ZXIpLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICB2YXIgb3RoaXMgPSAkKHRoaXMpXG4gICAgICAgICAgLGVsZW1CYXIgPSBvdGhpcy5maW5kKCcubGF5dWktcHJvZ3Jlc3MtYmFyJylcbiAgICAgICAgICAscGVyY2VudCA9IGVsZW1CYXIuYXR0cignbGF5LXBlcmNlbnQnKTtcblxuICAgICAgICAgIGVsZW1CYXIuY3NzKCd3aWR0aCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICByZXR1cm4gL14uK1xcLy4rJC8udGVzdChwZXJjZW50KSBcbiAgICAgICAgICAgICAgPyAobmV3IEZ1bmN0aW9uKCdyZXR1cm4gJysgcGVyY2VudCkoKSAqIDEwMCkgKyAnJSdcbiAgICAgICAgICAgOiBwZXJjZW50O1xuICAgICAgICAgIH0oKSk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYob3RoaXMuYXR0cignbGF5LXNob3dQZXJjZW50Jykpe1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICBlbGVtQmFyLmh0bWwoJzxzcGFuIGNsYXNzPVwiJysgRUxFTSArJy10ZXh0XCI+JysgcGVyY2VudCArJzwvc3Bhbj4nKTtcbiAgICAgICAgICAgIH0sMzUwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvL+aKmOWPoOmdouadv1xuICAgICAgLGNvbGxhcHNlOiBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgRUxFTSA9ICdsYXl1aS1jb2xsYXBzZSc7XG4gICAgICAgIFxuICAgICAgICAkKCcuJyArIEVMRU0gKyBlbGVtRmlsdGVyKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgdmFyIGVsZW1JdGVtID0gJCh0aGlzKS5maW5kKCcubGF5dWktY29sbGEtaXRlbScpXG4gICAgICAgICAgZWxlbUl0ZW0uZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIG90aGlzID0gJCh0aGlzKVxuICAgICAgICAgICAgLGVsZW1UaXRsZSA9IG90aGlzLmZpbmQoJy5sYXl1aS1jb2xsYS10aXRsZScpXG4gICAgICAgICAgICAsZWxlbUNvbnQgPSBvdGhpcy5maW5kKCcubGF5dWktY29sbGEtY29udGVudCcpXG4gICAgICAgICAgICAsaXNOb25lID0gZWxlbUNvbnQuY3NzKCdkaXNwbGF5JykgPT09ICdub25lJztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy/liJ3lp4vnirbmgIFcbiAgICAgICAgICAgIGVsZW1UaXRsZS5maW5kKCcubGF5dWktY29sbGEtaWNvbicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgZWxlbVRpdGxlLmFwcGVuZCgnPGkgY2xhc3M9XCJsYXl1aS1pY29uIGxheXVpLWNvbGxhLWljb25cIj4nKyAoaXNOb25lID8gJyYjeGU2MDI7JyA6ICcmI3hlNjFhOycpICsnPC9pPicpO1xuXG4gICAgICAgICAgICAvL+eCueWHu+agh+mimFxuICAgICAgICAgICAgZWxlbVRpdGxlLm9mZignY2xpY2snLCBjYWxsLmNvbGxhcHNlKS5vbignY2xpY2snLCBjYWxsLmNvbGxhcHNlKTtcbiAgICAgICAgICB9KTsgICAgIFxuICAgICAgICAgXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gaXRlbXNbdHlwZV0gPyBpdGVtc1t0eXBlXSgpIDogbGF5dWkuZWFjaChpdGVtcywgZnVuY3Rpb24oaW5kZXgsIGl0ZW0pe1xuICAgICAgaXRlbSgpO1xuICAgIH0pO1xuICB9O1xuICBcbiAgRWxlbWVudC5wcm90b3R5cGUucmVuZGVyID0gRWxlbWVudC5wcm90b3R5cGUuaW5pdDtcblxuICB2YXIgZWxlbWVudCA9IG5ldyBFbGVtZW50KCksIGRvbSA9ICQoZG9jdW1lbnQpO1xuICBlbGVtZW50LnJlbmRlcigpO1xuICBcbiAgdmFyIFRJVExFID0gJy5sYXl1aS10YWItdGl0bGUgbGknO1xuICBkb20ub24oJ2NsaWNrJywgVElUTEUsIGNhbGwudGFiQ2xpY2spOyAvL1RhYuWIh+aNolxuICBkb20ub24oJ2NsaWNrJywgY2FsbC5oaWRlVGFiTW9yZSk7IC8v6ZqQ6JeP5bGV5byA55qEVGFiXG4gICQod2luZG93KS5vbigncmVzaXplJywgY2FsbC50YWJBdXRvKTsgLy/oh6rpgILlupRcbiAgXG4gIGV4cG9ydHMoTU9EX05BTUUsIGVsZW1lbnQpO1xufSk7XG5cbiJdfQ==
